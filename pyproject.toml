[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff]
line-length = 88
exclude = ["alembic/"]

[tool.poetry]
name = "amigo"
version = "0.1.0"
description = "RESTful API to power the Amigo EHR service."
authors = ["Rafael Medina <ramedina@bu.edu>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.0"
python-dotenv = "^1.0.1"
alembic = "^1.13.1"
sqlalchemy = "^2.0.29"

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.4"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
